<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');

class MY_Model extends CI_Model
{
    protected $table_name     = '';
    protected $primary_key    = 'id';
    protected $primary_filter = 'intval';
    protected $order_by       = '';
    protected $timestamps     = false;
    protected $rules          = array();

    public function __construct()
    {
        parent::__construct();
    }

    /**
     * Set table name
     *
     * @param string $table_name table name
     */
    public function set_table_name($table_name = null)
    {
        if (!empty($table_name)) {
            $this->table_name = $table_name;
        }
    }

    /**
     * get the rules
     *
     * @return array rules
     */
    public function get_rules()
    {
        return $this->rules;
    }

    /**
     * set the rules
     *
     * @param string $field [description]
     * @param array  $rules [description]
     */
    public function set_rules($field, $rules = array())
    {
        $this->rules[$field] = $rules;
    }

    public function array_from_post($fields = array())
    {
        $data = array();

        if (count($fields)) {
            foreach ($fields as $field) {
                $data[$field] = $this->input->post($field);
            }
        }

        return $data;
    }

    public function get($id = null, $single = false, $translable = false)
    {
        if (null !== $id) {
            $filter = $this->primary_filter;
            $id = $filter($id);
            $this->db->where($this->primary_key, $id);
            $method = 'row';
        } else if (true === $single) {
            $method = 'row';
        } else {
            $method = 'result';
        }

        if (count($this->db->ar_orderby)) {
            $this->db->order_by($this->order_by);
        }

        return $this->db->get($this->table_name)->{$method}();
    }

    public function get_by($where, $single = false)
    {
        $this->db->where($where);

        return $this->get(null, $single);
    }

    public function save($data, $id = null, $translable = false)
    {
        // set timestamps
        if (true === $this->timestamps) {
            $now = date('Y-m-d H:i:s');
            $id || $data['created'] = $now;

            $data['modified'] = $now;
        }

        // insert
        if (null === $id) {
            !isset($data[$this->primary_key]) || $data[$this->primary_key] = null;
            $this->db->set($data);
            $this->db->insert($this->table_name);
            $id = $this->db->insert_id();
        }
        // update
        else {
            $filter = $this->primary_filter;
            $id = $filter($id);
            $this->db->set($data);
            $this->db->where($this->primary_key, $id);
            $this->db->update($this->table_name);
        }

        return $id;
    }

    public function delete($id, $permanence = false)
    {
        $filter = $this->primary_filter;
        $id = $filter($id);

        if (! $id) {
            return false;
        }

        $this->db->where($this->primary_key, $id);
        $this->db->limit(1);

        if (true === $permanence) {
            $this->db->delete($this->table_name);
        } else {
            $statuses = $this->config->item('status');
            $this->db->set('status', 'status | 4', false);
            $this->db->update($this->table_name);
        }
    }
}

/* End of file MY_Model.php */
/* Location: ./application/core/MY_Model.php */